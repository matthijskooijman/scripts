#!/bin/bash

# Diff avr-objdump -t output.
# Compares the presence and size of any non-debug symbols in the given
# section (or all sections if none given).
#
# Files to compare must be .elf files

if [ "$#" = 3 ]; then
	SECTIONS=$1
	shift;
else
	SECTIONS=''
fi

if [ "$#" != 2 ]; then
	echo "Usage: $0 [sections|--ram|--flash] file1.elf file2.elf"
	exit 1
fi

if [ "$SECTIONS" = "--ram" ]; then
	SECTIONS='.bss .data .noinit'
elif [ "$SECTIONS" = "--flash" ]; then
	SECTIONS='.text'
fi

symbols() {
	SECOPTS=
	for SECTION in $SECTIONS; do
		SECOPTS="$SECOPTS --section $SECTION"
	done
	if file $1 | grep Atmel.AVR >/dev/null; then
		avr-objdump --demangle -t --special-syms $SECOPTS "$1"
	else
		objdump --demangle -t --special-syms $SECOPTS "$1"
	fi
}

filter() {
	# Select everything after the table heading
	sed -n -e '/^SYMBOL TABLE:$/,$ p' | sed 1d |
	# Drop debugging symbols
	grep -Ev '^[0-9a-f]+ .....d. ' |
	# Strip the address and flags, but keep the section, size and
	# symbol name. Make them separated by tabs, so awk can split on
	# that (without also splitting on any spaces inside the symbol
	# name). Strip any ".hidden" from the symbol name (seems
	# lto-related)
	sed -r 's/^[0-9a-f]+ ....... ([^	]*)	([0-9a-f]+) (\.hidden )?(.*)$/\1	\2	\4/' |
	# Shuffle the order of fields (for sorting and easy reading)
	# Also strip any numbers added to the symbol name by the
	# optimizer
	awk -F'\t' '{ sub(/\.[.0-9]*$/, ".nnn", $3); gsub(/\.[.0-9]*\]/, ".nnn]", $3); printf("%60s %s %s\n", $3, $2, $1); }' |
	sort
}

FIRST="$1"
SECOND="$2"
shift; shift

grc diff "$@" <(symbols "$FIRST" | filter) <(symbols "$SECOND" | filter)
