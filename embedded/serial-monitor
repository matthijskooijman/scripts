#!/bin/bash
#
# Copyright 2014 Matthijs Kooijman <matthijs@stdin.nl>
#
# Permission is hereby granted, free of charge, to anyone obtaining a
# copy of this document and accompanying files, to do whatever they want
# with them without any restriction, including, but not limited to,
# copying, modification and redistribution.
#
# NO WARRANTY OF ANY KIND IS PROVIDED.

# This scripts starts minicom as a serial console for an Arduino board.
# It also automatically sets up logging to the ~/minicom.cap.ttyACMx
# file. It can be used to automatically stop and restart the serial
# console during uploads, see the accompanied serial-suspend script for
# details.
#
# Alternatively, you can quit minicom manually and then restart it by
# just pressing enter.

if [ -z "$1" ]; then
	DEVICE=/dev/ttyACM0
elif [ -e "$1" ]; then
	DEVICE="$1"
elif [ -e /dev/"$1" ]; then
	DEVICE=/dev/"$1"
elif [ -e /dev/serial/"$1" ]; then
	DEVICE=/dev/serial/"$1"
elif [ -e /dev/serial/arduino-"$1" ]; then
	DEVICE=/dev/serial/arduino-"$1"
elif [ -e /dev/ttyACM$1 ]; then
	DEVICE=/dev/ttyACM$1
else
	echo "Invalid device specified. Examples: "
	echo "  $(basename $0) /dev/ttyUSB0"
	echo "  $(basename $0) ttyUSB1"
	echo "  $(basename $0) 1 (to open /dev/ttyACM1)"
	echo "  $(basename $0) (to open /dev/ttyACM0)"
	exit 1
fi

# Resolve any symlinks
DEVICE=$(realpath  $DEVICE)

if [ -n "$2" ]; then
	BAUD=$2
else
	BAUD=115200
fi
LOG=${HOME}/minicom.cap.$(basename ${DEVICE})
PIDFILE=/run/user/$(id -u)/serial-monitor.$(basename ${DEVICE}).pid

while true; do
	rm -f $LOG
	# This enables monitor mode, which (like when bash is
	# interactive) creates a process group for any external
	# commands, which then allows tmux to show that command rather
	# than just "bash". Then this uses exec -a to set the name of
	# the command to the device name (in a subshell so this script
	# continues after the exec).
	set -o monitor
	(exec -a "$DEVICE" minicom --wrap -D $DEVICE -C $LOG -b $BAUD)
	set +o monitor
	# Wait for enter or USR1
	(trap exit USR1; sh -c 'echo $PPID' > $PIDFILE; read foo)
done
